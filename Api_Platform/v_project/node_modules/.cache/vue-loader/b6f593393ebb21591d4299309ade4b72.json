{"remainingRequest":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\dlz\\Api_Platform\\v_project\\src\\components\\Project_case.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\src\\components\\Project_case.vue","mtime":1662904079927},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662281752768},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\babel-loader\\lib\\index.js","mtime":1662281752427},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662281752768},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\vue-loader\\lib\\index.js","mtime":1662281758072}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Project_case\",\r\n  data() {\r\n    return {\r\n      right_api: false,\r\n      right_configure: false,\r\n      doing_api: '添加好友',\r\n      userable_par: '',\r\n      setting_api: {},\r\n      setting_configure: {},\r\n      dck: [], // 默认选中的节点\r\n      dek: [], //默认展开的节点\r\n      ref: \"tree\",\r\n      tableData: [{name: \"name\", des: 'des'}],\r\n      activeName: \"\", //body中默认显示哪个tab页\r\n      apis: [\r\n        // {id:1,type:'api',label:'接口1号',children:[{id:'1_1',type:'configure',label:'设置1'},{id:'1_2',type:'configure',label:'设置2'},{id:'1_3',type:'configure',label:'设置3'}]},\r\n        // {id:2,type:'api',label:'接口2号',children:[]},\r\n        // {id:3,type:'api',label:'接口3号',children:[]},\r\n        // {id:4,type:'api',label:'接口2号',children:[]},\r\n        // {id:5,type:'api',label:'接口2号',children:[]},\r\n        // {id:6,type:'api',label:'接口3号',children:[]},\r\n        // {id:7,type:'api',label:'接口2号',children:[]},\r\n      ],\r\n    }\r\n  },\r\n  props: [\"project_id\",],\r\n  mounted() {\r\n    document.getElementById('right_id').style.minHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\r\n    document.getElementById('right_id').style.maxHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\r\n    document.getElementById('left_div').style.height = (document.documentElement.clientHeight - 286).toString() + 'px'\r\n    axios.get('http://localhost:8000/get_apis/', {\r\n      params: {\r\n        project_id: this.project_id,\r\n      }\r\n    }).then(res => {\r\n      this.apis = res.data\r\n    });\r\n    // 获取选中的接口\r\n    axios.get('http://localhost:8000/get_dck/', {\r\n      params: {\r\n        project_id: this.project_id,\r\n      }\r\n    }).then(res => {\r\n      this.dck = res.data\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    handleCheckChange(data, checked) {\r\n      console.log(data, checked);\r\n      axios.get('http://localhost:8000/set_dck', {\r\n        params: {\r\n          project: this.project_id,\r\n          dck: this.$refs.tree.getCheckedKeys().toString(),\r\n        }\r\n      }).then(res => {\r\n        this.dck = res.data\r\n      })\r\n    },\r\n    // 如果是接口，则展示接口详情页；否则展示配置详情\r\n    set(data) {\r\n      console.log(data)\r\n      if (data.type == 'api') {\r\n        this.right_api = true;\r\n        this.right_configure = false;\r\n        this.setting_api = data;\r\n      } else {\r\n        this.right_api = false;\r\n        this.right_configure = true;\r\n        this.setting_configure = data;\r\n      }\r\n\r\n    },\r\n    // 删除，增加二次确认\r\n    remove(data) {\r\n      if (confirm(\"确定删除吗？\") == false) {\r\n        return\r\n      }\r\n      axios.get('http://localhost:8000/remove_ac', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          id: data.id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data\r\n      })\r\n    },\r\n\r\n\r\n    v_if(data) {\r\n      if (data.type == 'api') {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    handleClick(tab, event) {\r\n      console.log(tab, event)\r\n    },\r\n    // 新增配置后，让该接口展开\r\n    add_configure(data) {\r\n      axios.get('http://localhost:8000/add_configure/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          id: data.id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.dek = [data.id];\r\n      })\r\n\r\n    },\r\n    add_apis() {\r\n      axios.get('http://localhost:8000/add_apis/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data\r\n      })\r\n\r\n    },\r\n\r\n\r\n  }\r\n}\r\n",{"version":3,"sources":["Project_case.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA","file":"Project_case.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <el-card id='right_id' style=\"float:right;width:-webkit-calc(100% - 350px);\">\r\n      <div v-if=\"right_api\">\r\n        <el-button size=\"mini\" type=\"primary\">发送</el-button>\r\n        <el-button size=\"mini\" type=\"primary\">保存</el-button>\r\n        &#12288;<br><br>\r\n        <span>接口ID:{{ setting_api.id }}</span><br><br>\r\n        <el-form ref=\"form\" label-width=\"80px\" label-position=\"left\">\r\n          <el-form-item label=\"接口名称/描述\">\r\n            <el-input v-model=\"setting_api.label\" style=\"width: 55%\"></el-input>\r\n            <el-input v-model=\"setting_api.label\" style=\"width: 45%\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Host\">\r\n            <el-input v-model=\"setting_api.label\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"方式/路径\">\r\n            <el-select v-model=\"setting_api.methods\" style=\"width: 100px\" placeholder=\"请求方式\">\r\n              <el-option label=\"POST\" value=\"POST\"></el-option>\r\n              <el-option label=\"GET\" value=\"GET\"></el-option>\r\n            </el-select>\r\n            &nbsp;\r\n            <el-input style=\"width: -webkit-calc(100% - 112px)\" v-model=\"setting_api.path\"></el-input>\r\n          </el-form-item>\r\n          <el-tabs>\r\n            <el-tab-pane label=\"Params\">\r\n              <el-table\r\n                  :data=\"env_list_data\"\r\n                  stripe\r\n                  size=\"mini\"\r\n                  style=\"width: 100%;overflow-y: auto;min-height: 100%\">\r\n                <el-table-column\r\n                    prop=\"id\"\r\n                    label=\"参数名\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"host\"\r\n                    label=\"参数描述\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"host\"\r\n                    label=\"操作\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"Headers\">请求头</el-tab-pane>\r\n            <el-tab-pane label=\"Body\">\r\n              <el-tabs v-model=\"activeName\" type=\"card\" @tab-click=\"handleClick\">\r\n                <el-tab-pane label=\"none\" name=\"none\"><h2 style=\"text-align: center;color: darkgrey\">不传任何参数</h2>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"form-data\" name=\"form-data\">\r\n                  <el-table\r\n                      :data=\"env_list_data\"\r\n                      stripe\r\n                      size=\"mini\"\r\n                      style=\"width: 100%;overflow-y: auto;min-height: 100%\">\r\n                    <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"参数名\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"host\"\r\n                        label=\"参数描述\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"host\"\r\n                        label=\"操作\">\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"x-www-form-urlencode\" name=\"x-www-form-urlencode\">\r\n                  <el-table\r\n                      :data=\"env_list_data\"\r\n                      stripe\r\n                      size=\"mini\"\r\n                      style=\"width: 100%;overflow-y: auto;min-height: 100%\">\r\n                    <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"参数名\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"host\"\r\n                        label=\"参数描述\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"host\"\r\n                        label=\"操作\">\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"raw\" name=\"raw\">\r\n                  <el-select v-model=\"setting_api.methods\" style=\"z-index:999;position:fixed;right:42px;width: 130px\"\r\n                             placeholder=\"Text\">\r\n                    <el-option label=\"Text\" value=\"Text\"></el-option>\r\n                    <el-option label=\"JavaScript\" value=\"JavaScript\"></el-option>\r\n                    <el-option label=\"JSON\" value=\"JSON\"></el-option>\r\n                    <el-option label=\"XML\" value=\"XML\"></el-option>\r\n                    <el-option label=\"HTML\" value=\"HTML\"></el-option>\r\n                  </el-select>\r\n                  <el-input type=\"textarea\" :rows=\"5\"></el-input>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"binary\" name=\"binary\">\r\n                  <el-upload\r\n                      class=\"upload-demo\"\r\n                      drag\r\n                      action=\"https://jsonplaceholder.typicode.com/posts/\"\r\n                      multiple>\r\n                    <i class=\"el-icon-upload\"></i>\r\n                    <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                    <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文</div>\r\n                  </el-upload>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"GraphQL\" name=\"GraphQL\">\r\n                  <el-input type=\"textarea\" :rows=\"6\" style=\"width: 65%\" placeholder=\"QUERY\"></el-input>\r\n                  <el-input type=\"textarea\" :rows=\"6\" style=\"width: 35%\" placeholder=\"GRAPHQL VARIABLES\"></el-input>\r\n                </el-tab-pane>\r\n              </el-tabs>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"Response\">\r\n              <el-input type=\"textarea\" style=\"height: 100%\" :rows=\"6\"></el-input>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"ResquestCode\">请求代码</el-tab-pane>\r\n            <el-tab-pane label=\"ConfigureResult\">配置</el-tab-pane>\r\n          </el-tabs>\r\n        </el-form>\r\n      </div>\r\n      <div v-if=\"right_configure\">\r\n\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"\">Save</el-button>\r\n        &#12288 <span>ID: {{ setting_configure.id }}</span>\r\n        &#12288 <span>运行方式：</span>\r\n        <el-select v-model=\"setting_configure.do_time\" placeholder=\"请选择\" style=\"width: 90px\"></el-select>\r\n        <el-ption label=\"before\" value=\"before\"></el-ption>\r\n        <el-ption label=\"after\" value=\"after\"></el-ption>\r\n        &#12288 <span>配置名称：</span>\r\n        <el-input style=\"width:-webkit-calc(100% - 500px)\" v-model=\"setting_configure.label\"></el-input>\r\n        <br><br>\r\n        <el-tabs tab-position=\"right\" style=\"height: 100%\">\r\n          <el-tab-pane label=\"仅运行\"><span class=\"smallfont\">帮助：选中此项后，其他配置不再运行！</span></el-tab-pane>\r\n          <el-tab-pane label=\"断言\"></el-tab-pane>\r\n          <el-tab-pane label=\"SQL增删改\"></el-tab-pane>\r\n          <el-tab-pane label=\"随机变量\"></el-tab-pane>\r\n          <el-tab-pane label=\"mock\"></el-tab-pane>\r\n          <el-tab-pane label=\"插入参数\"></el-tab-pane>\r\n          <el-tab-pane label=\"加密参数\"></el-tab-pane>\r\n          <el-tab-pane label=\"草稿\"></el-tab-pane>\r\n\r\n        </el-tabs>\r\n      </div>\r\n    </el-card>\r\n    <h1>接口用例页 &#12288\r\n      <el-button size=\"mini\" type=\"primary\" @click=\"add_apis\">新增接口</el-button>\r\n    </h1>\r\n    <el-tree\r\n        id=\"left_div\"\r\n        style=\"width:300px;overflow-y: auto\"\r\n        :data=\"apis\"\r\n        show-checkbox\r\n        node-key=\"id\"\r\n        :default-checked-keys=\"dck\"\r\n        :default-expanded-keys=\"dek\"\r\n        @check-change=\"handleCheckChange\">\r\n      <span slot-scope=\"{data}\">\r\n        <span size=\"mini\">{{ data.label }} &#12288</span>\r\n        <el-button\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"() => set(data)\"\r\n            style=\"color: darkturquoise\">\r\n              设置\r\n        </el-button>\r\n        <el-button\r\n            v-if=\"v_if(data)\"\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"() => add_configure(data)\"\r\n            style=\"color: darkgreen\">\r\n              增加\r\n        </el-button>\r\n        <el-button\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"() => remove(data)\">\r\n              删除\r\n        </el-button>\r\n\r\n      </span>\r\n    </el-tree>\r\n\r\n\r\n    <el-card style=\"position: fixed;bottom: 15px;width:-webkit-calc(100% - 240px);min-height:100px;\">\r\n      <el-input v-model=\"userable_par\" type=\"textarea\" :row=\"5\" style=\"float:right;width: -webkit-calc(100% - 300px)\"\r\n                placeholder=\"当前可用变量\"></el-input>\r\n      <el-button size=\"mini\" type=\"success\">执行</el-button> &nbsp;<span>正在执行：</span> <span\r\n        style=\"color: #42b983\">{{ doing_api }}...</span>\r\n      <br>\r\n      <el-button style=\"margin-top: 10px\" size=\"mini\" type=\"primary\">报告</el-button> &nbsp;<span>执行结果：</span>\r\n      <strong><span style=\"color: darkgreen\">成功</span><br></strong>\r\n\r\n\r\n    </el-card>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Project_case\",\r\n  data() {\r\n    return {\r\n      right_api: false,\r\n      right_configure: false,\r\n      doing_api: '添加好友',\r\n      userable_par: '',\r\n      setting_api: {},\r\n      setting_configure: {},\r\n      dck: [], // 默认选中的节点\r\n      dek: [], //默认展开的节点\r\n      ref: \"tree\",\r\n      tableData: [{name: \"name\", des: 'des'}],\r\n      activeName: \"\", //body中默认显示哪个tab页\r\n      apis: [\r\n        // {id:1,type:'api',label:'接口1号',children:[{id:'1_1',type:'configure',label:'设置1'},{id:'1_2',type:'configure',label:'设置2'},{id:'1_3',type:'configure',label:'设置3'}]},\r\n        // {id:2,type:'api',label:'接口2号',children:[]},\r\n        // {id:3,type:'api',label:'接口3号',children:[]},\r\n        // {id:4,type:'api',label:'接口2号',children:[]},\r\n        // {id:5,type:'api',label:'接口2号',children:[]},\r\n        // {id:6,type:'api',label:'接口3号',children:[]},\r\n        // {id:7,type:'api',label:'接口2号',children:[]},\r\n      ],\r\n    }\r\n  },\r\n  props: [\"project_id\",],\r\n  mounted() {\r\n    document.getElementById('right_id').style.minHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\r\n    document.getElementById('right_id').style.maxHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\r\n    document.getElementById('left_div').style.height = (document.documentElement.clientHeight - 286).toString() + 'px'\r\n    axios.get('http://localhost:8000/get_apis/', {\r\n      params: {\r\n        project_id: this.project_id,\r\n      }\r\n    }).then(res => {\r\n      this.apis = res.data\r\n    });\r\n    // 获取选中的接口\r\n    axios.get('http://localhost:8000/get_dck/', {\r\n      params: {\r\n        project_id: this.project_id,\r\n      }\r\n    }).then(res => {\r\n      this.dck = res.data\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    handleCheckChange(data, checked) {\r\n      console.log(data, checked);\r\n      axios.get('http://localhost:8000/set_dck', {\r\n        params: {\r\n          project: this.project_id,\r\n          dck: this.$refs.tree.getCheckedKeys().toString(),\r\n        }\r\n      }).then(res => {\r\n        this.dck = res.data\r\n      })\r\n    },\r\n    // 如果是接口，则展示接口详情页；否则展示配置详情\r\n    set(data) {\r\n      console.log(data)\r\n      if (data.type == 'api') {\r\n        this.right_api = true;\r\n        this.right_configure = false;\r\n        this.setting_api = data;\r\n      } else {\r\n        this.right_api = false;\r\n        this.right_configure = true;\r\n        this.setting_configure = data;\r\n      }\r\n\r\n    },\r\n    // 删除，增加二次确认\r\n    remove(data) {\r\n      if (confirm(\"确定删除吗？\") == false) {\r\n        return\r\n      }\r\n      axios.get('http://localhost:8000/remove_ac', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          id: data.id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data\r\n      })\r\n    },\r\n\r\n\r\n    v_if(data) {\r\n      if (data.type == 'api') {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    handleClick(tab, event) {\r\n      console.log(tab, event)\r\n    },\r\n    // 新增配置后，让该接口展开\r\n    add_configure(data) {\r\n      axios.get('http://localhost:8000/add_configure/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          id: data.id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.dek = [data.id];\r\n      })\r\n\r\n    },\r\n    add_apis() {\r\n      axios.get('http://localhost:8000/add_apis/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data\r\n      })\r\n\r\n    },\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.smallfont {\r\n  font-size: xx-small;\r\n  color: gray;\r\n}\r\n</style>"]}]}