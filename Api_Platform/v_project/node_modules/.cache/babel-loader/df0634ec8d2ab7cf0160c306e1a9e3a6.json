{"remainingRequest":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\babel-loader\\lib\\index.js!D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\dlz\\Api_Platform\\v_project\\src\\components\\Project_case.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\src\\components\\Project_case.vue","mtime":1667122454117},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\babel.config.js","mtime":1662281751153},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662281752768},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1662281757899},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\babel-loader\\lib\\index.js","mtime":1662281752427},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662281752768},{"path":"D:\\Git\\dlz\\Api_Platform\\v_project\\node_modules\\vue-loader\\lib\\index.js","mtime":1662281758072}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport Report from \"@/components/Report\";\nexport default {\n  name: \"Project_case\",\n  data: function data() {\n    return {\n      right_report: false,\n      env_list: [],\n      fd_index: '',\n      //fd参数对应行的下标\n      choose_tab_pane: '',\n      right_api: false,\n      right_configure: false,\n      userable_par: '',\n      setting_api: {},\n      setting_configure: {},\n      dck: [],\n      // 默认选中的节点\n      dek: [],\n      //默认展开的节点\n      ref: \"tree\",\n      tableData: [{\n        name: \"name\",\n        des: 'des'\n      }],\n      activeName: \"\",\n      //body中默认显示哪个tab页\n      apis: [// {id:1,type:'api',label:'接口1号',children:[{id:'1_1',type:'configure',label:'设置1'},{id:'1_2',type:'configure',label:'设置2'},{id:'1_3',type:'configure',label:'设置3'}]},\n      ],\n      response_data: {\n        R: '',\n        // Response\n        RD: '',\n        // ResponseData\n        CR: '' // ConfigureResult\n\n      }\n    };\n  },\n  props: [\"project_id\"],\n  components: {\n    Report: Report\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    document.getElementById('right_id').style.minHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\n    document.getElementById('right_id').style.maxHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\n    document.getElementById('left_div').style.height = (document.documentElement.clientHeight - 286).toString() + 'px';\n    axios.get('http://localhost:8000/get_apis/', {\n      params: {\n        project_id: this.project_id\n      }\n    }).then(function (res) {\n      _this.apis = res.data;\n    }); // 获取选中的接口\n\n    axios.get('http://localhost:8000/get_dck/', {\n      params: {\n        project_id: this.project_id\n      }\n    }).then(function (res) {\n      _this.dck = res.data;\n    });\n    axios.get('http://localhost:8000/get_env_list/').then(function (res) {\n      _this.env_list = res.data;\n      _this.env_info = _this.loadAll();\n    });\n  },\n  methods: {\n    look_report: function look_report() {\n      this.right_configure = false;\n      this.right_api = false;\n      this.right_report = true;\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var env = this.env_info;\n      var results = queryString ? env.filter(this.createFilter(queryString)) : env; // 调用 callback 返回建议列表的数据\n\n      cb(results);\n    },\n    createFilter: function createFilter(queryString) {\n      return function (env) {\n        return env.host.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    loadAll: function loadAll() {\n      return this.env_list;\n    },\n    handleSelect: function handleSelect(item) {\n      this.setting_api.host = item.host;\n    },\n    get_action_binary: function get_action_binary() {\n      return process.env.VUE_APP_BASE_URL + '/upload_binary_file/?ApiID=' + this.setting_api.id;\n    },\n    get_action_fd: function get_action_fd() {\n      return process.env.VUE_APP_BASE_URL + '/upload_fd_file/?ApiID=' + this.setting_api.id;\n    },\n    get_json: function get_json() {\n      try {\n        return JSON.parse(this.response_data.R);\n      } catch (e) {\n        return this.response_data.R;\n      }\n    },\n    // 获取index\n    set_fd_index: function set_fd_index(index) {\n      this.fd_index = index;\n    },\n    upload_fd_file: function upload_fd_file(res, file) {\n      var file_name = '*FILE*' + this.setting_api.id + '_' + file.raw.name;\n      this.setting_api.payload_fd[this.fd_index].value = file_name;\n      document.getElementById('fd_value_input_' + this.fd_index).value = file_name;\n      document.getElementById('fd_value_input_' + this.fd_index).disabled = true;\n    },\n    upload_binary_file: function upload_binary_file(res, file) {\n      this.setting_api.payload_binary = this.setting_api.id + '_' + file.raw.name;\n    },\n    up_api: function up_api() {\n      var _this2 = this;\n\n      axios.get('http://localhost:8000/up_api/', {\n        params: {\n          api_id: this.setting_api.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this2.apis = res.data;\n        _this2.right_api = false;\n        _this2.dek = [_this2.setting_api.id];\n      });\n    },\n    down_api: function down_api() {\n      var _this3 = this;\n\n      axios.get('http://localhost:8000/down_api/', {\n        params: {\n          api_id: this.setting_api.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this3.apis = res.data;\n        _this3.right_api = false;\n      });\n    },\n    up_configure: function up_configure() {\n      var _this4 = this;\n\n      axios.get('http://localhost:8000/up_configure/', {\n        params: {\n          configure_id: this.setting_configure.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this4.apis = res.data;\n        _this4.right_configure = false;\n        _this4.dek = [parseInt(_this4.setting_configure.id.split('_')[0])]; // 将字符串转换成整形\n      });\n    },\n    down_configure: function down_configure() {\n      var _this5 = this;\n\n      axios.get('http://localhost:8000/down_configure/', {\n        params: {\n          configure_id: this.setting_configure.id,\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this5.apis = res.data;\n        _this5.right_configure = false;\n        _this5.dek = [parseInt(_this5.setting_configure.id.split('_')[0])]; // 将字符串转换成整形\n      });\n    },\n    // get_label(label){\n    //   if (label.length>12){\n    //     var new_label = label.substring(0,12) + '...'\n    //   }\n    //   else{\n    //     var new_label = label\n    //   }\n    //   return new_label\n    //\n    // },\n    get_label: function get_label(label) {\n      return label.substring(0, 12) + (label.length > 12 ? '...' : '');\n    },\n    handleCheckChange: function handleCheckChange(data, checked) {\n      var _this6 = this;\n\n      console.log(data, checked);\n      axios.get('http://localhost:8000/set_dck/', {\n        params: {\n          project_id: this.project_id,\n          dck: this.$refs.tree.getCheckedKeys().toString()\n        }\n      }).then(function (res) {\n        _this6.dck = res.data;\n      });\n    },\n    // 如果是接口，则展示接口详情页；否则展示配置详情\n    set: function set(data) {\n      var _this7 = this;\n\n      console.log(data);\n\n      if (data.type == 'api') {\n        this.right_api = true;\n        this.right_configure = false;\n        this.right_report = false;\n        this.setting_api = data;\n        this.response_data = {\n          R: '',\n          // Response\n          RD: '',\n          // ResponseData\n          CR: '' // ConfigureResult\n\n        }; // 获取可用变量\n\n        axios.get('/get_userable_par/', {\n          params: {\n            api_id: data.id,\n            project_id: this.project_id\n          }\n        }).then(function (res) {\n          _this7.userable_par = res.data;\n        });\n      } else {\n        this.right_api = false;\n        this.right_report = false;\n        this.right_configure = true;\n        this.setting_configure = data;\n      }\n    },\n    // 删除，增加二次确认\n    remove: function remove(data) {\n      var _this8 = this;\n\n      if (confirm(\"确定删除吗？\") == false) {\n        return;\n      }\n\n      axios.get('http://localhost:8000/remove_ac', {\n        params: {\n          project_id: this.project_id,\n          id: data.id\n        }\n      }).then(function (res) {\n        _this8.apis = res.data;\n        _this8.right_api = false; // 删除后设置右侧不显示\n\n        _this8.right_configure = false;\n\n        _this8.dck.remove(data.id);\n      });\n    },\n    v_if: function v_if(data) {\n      if (data.type == 'api') {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    handleClick: function handleClick(tab, event) {\n      console.log(tab, event);\n    },\n    // 新增配置后，让该接口展开\n    add_configure: function add_configure(data) {\n      var _this9 = this;\n\n      axios.get('http://localhost:8000/add_configure/', {\n        params: {\n          project_id: this.project_id,\n          id: data.id\n        }\n      }).then(function (res) {\n        _this9.apis = res.data;\n        _this9.dek = [data.id];\n      });\n    },\n    add_apis: function add_apis() {\n      var _this10 = this;\n\n      axios.get('http://localhost:8000/add_apis/', {\n        params: {\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this10.apis = res.data;\n        _this10.dek = [];\n      });\n    },\n    save_configure: function save_configure() {\n      var _this11 = this;\n\n      axios.post('http://localhost:8000/save_configure/', this.setting_configure).then(function (res) {\n        _this11.$message({\n          message: '保存成功！',\n          type: 'success'\n        });\n      });\n    },\n    save_api: function save_api() {\n      var _this12 = this;\n\n      axios.post('http://localhost:8000/save_api/', this.setting_api, {\n        params: {\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this12.apis = res.data;\n\n        _this12.$message({\n          message: '保存成功',\n          type: 'success'\n        });\n      });\n    },\n    send_api: function send_api() {\n      var _this13 = this;\n\n      axios.post('http://localhost:8000/send_api/', this.setting_api, {\n        params: {\n          project_id: this.project_id\n        }\n      }).then(function (res) {\n        _this13.response_data = res.data;\n        _this13.choose_tab_pane = 'Response';\n      });\n    },\n    run: function run() {\n      this.right_configure = false;\n      this.right_api = false;\n      this.right_report = false;\n\n      if (confirm('执行大用例之前请确保当前接口或配置的设置已经保存') == false) {\n        return;\n      }\n\n      var end_result = document.getElementById('end_result');\n      var doing_api = document.getElementById('doing_api');\n      var project_id = this.project_id;\n      var t = setInterval(function () {\n        axios.get('http://localhost:8000/doing_api/', {\n          params: {\n            project_id: project_id // 由于作用域的问题，定时器无法获取this.project_id,所以在外面定义变量var\n\n          }\n        }).then(function (res) {\n          doing_api.innerText = res.data;\n        });\n      }, 500);\n      axios.get('/run/', {\n        params: {\n          project_id: this.project_id // dck: this.dck.toString(),  不通过前端传值，通过后端去取，提高run方法的复用性\n\n        }\n      }).then(function (res) {\n        clearInterval(t);\n        end_result.innerText = res.data;\n\n        if (res.data == 'True') {\n          end_result.style.color = 'green';\n        } else {\n          end_result.style.color = 'red';\n        }\n\n        doing_api.innerText = '全部执行完毕';\n      });\n    },\n    // 选择配置的方法，切换配置tab页时清空之前选择的方式、值\n    choose_configure_method: function choose_configure_method(tab, event) {\n      console.log(tab, event);\n      this.setting_configure.select = '';\n      this.setting_configure.value = '';\n      this.setting_configure.method = tab.label;\n    },\n    // 新增参数\n    add_params: function add_params() {\n      this.setting_api.params.push({\n        \"key\": \"\",\n        \"value\": \"\"\n      });\n    },\n    // 删除参数\n    del_params: function del_params(index) {\n      this.setting_api.params.splice(index, 1);\n    },\n    // 新增参数\n    add_headers: function add_headers() {\n      this.setting_api.headers.push({});\n    },\n    // 删除参数\n    del_headers: function del_headers(index) {\n      this.setting_api.headers.splice(index, 1);\n    },\n    // 新增参数\n    add_payload_fd: function add_payload_fd() {\n      this.setting_api.payload_fd.push({});\n    },\n    // 删除参数\n    del_payload_fd: function del_payload_fd(index) {\n      this.setting_api.payload_fd.splice(index, 1);\n    },\n    // 新增参数\n    add_payload_xwfu: function add_payload_xwfu() {\n      this.setting_api.payload_xwfu.push({});\n    },\n    // 删除参数\n    del_payload_xwfu: function del_payload_xwfu(index) {\n      this.setting_api.payload_xwfu.splice(index, 1);\n    }\n  }\n};",{"version":3,"mappings":"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","names":["name","data","right_report","env_list","fd_index","choose_tab_pane","right_api","right_configure","userable_par","setting_api","setting_configure","dck","dek","ref","tableData","des","activeName","apis","response_data","R","RD","CR","props","components","Report","mounted","document","axios","params","project_id","then","methods","look_report","querySearch","queryString","cb","createFilter","loadAll","handleSelect","item","get_action_binary","get_action_fd","get_json","set_fd_index","index","upload_fd_file","res","file","upload_binary_file","up_api","api_id","down_api","up_configure","configure_id","down_configure","get_label","label","handleCheckChange","checked","console","set","remove","id","v_if","handleClick","tab","event","add_configure","add_apis","save_configure","message","type","save_api","send_api","run","doing_api","clearInterval","end_result","choose_configure_method","add_params","del_params","add_headers","del_headers","add_payload_fd","del_payload_fd","add_payload_xwfu","del_payload_xwfu"],"sourceRoot":"src/components","sources":["Project_case.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card id='right_id' style=\"float:right;width:-webkit-calc(100% - 350px);\">\r\n      <div v-if=\"right_api\">\r\n        <el-button @click=\"send_api\" size=\"mini\" type=\"primary\">发送</el-button>\r\n        <el-button @click=\"save_api\" size=\"mini\" type=\"primary\">保存</el-button>\r\n        <el-button @click=\"up_api\" size=\"mini\" type=\"text\">up</el-button>\r\n        <el-button @click=\"down_api\" size=\"mini\" type=\"text\">down</el-button>\r\n        &#12288<span style=\"font-size: xx-small;color: grey\">使用变量请用占位符:{%变量名%}，可用在请求头、url、请求体中</span>\r\n        <span style=\"float: right\">接口ID:{{ setting_api.id }}</span><br><br>\r\n        <el-form ref=\"form\" label-width=\"100px\" label-position=\"left\">\r\n          <el-form-item label=\"接口名称/描述\">\r\n            <el-input v-model=\"setting_api.label\" style=\"width: 55%\"></el-input>\r\n            <el-input v-model=\"setting_api.des\" style=\"width: 45%\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Host\">\r\n            <!--            <el-input v-model=\"setting_api.host\"></el-input>-->\r\n            <el-autocomplete\r\n                class=\"inline-input\"\r\n                v-model=\"setting_api.host\"\r\n                :fetch-suggestions=\"querySearch\"\r\n                placeholder=\"请输入域名\"\r\n                @select=\"handleSelect\"\r\n                :trigger-on-focus=\"true\"\r\n                style=\"float: left;width: 100%\"\r\n            >\r\n              <template slot-scope=\"{item}\">\r\n                <div style=\"color: #0d0e0e\"><strong>{{ item.host }}</strong></div>\r\n                <span>【标签：{{ item.type }}】</span>\r\n                <span>【{{ item.des }}】</span>\r\n                <el-divider></el-divider>\r\n              </template>\r\n            </el-autocomplete>\r\n\r\n\r\n          </el-form-item>\r\n          <el-form-item label=\"方式/路径\">\r\n            <el-select v-model=\"setting_api.method\" style=\"width: 100px\" placeholder=\"请求方式\">\r\n              <el-option label=\"POST\" value=\"POST\"></el-option>\r\n              <el-option label=\"GET\" value=\"GET\"></el-option>\r\n            </el-select>\r\n            <el-input style=\"width: -webkit-calc(100% - 112px)\" v-model=\"setting_api.path\"></el-input>\r\n          </el-form-item>\r\n          <el-tabs type=\"border-card\" v-model=\"choose_tab_pane\">\r\n            <el-tab-pane label=\"Params\">\r\n              <el-table\r\n                  :data=\"setting_api.params\"\r\n                  stripe\r\n                  size=\"mini\"\r\n                  style=\"width: 100%;overflow-y: auto;min-height: 100%\">\r\n                <el-table-column label=\"参数名\" width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-input v-model=\"scope.row.key\"></el-input>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"参数值\" width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-input v-model=\"scope.row.value\"></el-input>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"参数描述\" width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-input v-model=\"scope.row.des\"></el-input>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column>\r\n                  <template slot=\"header\">\r\n                    <el-button size=\"mini\" type=\"primary\" @click=\"add_params\">新增</el-button>\r\n                  </template>\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button size=\"mini\" type=\"danger\" @click=\"del_params(scope.$index)\">删除</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"Headers\">\r\n              <el-table\r\n                  :data=\"setting_api.headers\"\r\n                  stripe\r\n                  size=\"mini\"\r\n                  style=\"width: 100%;overflow-y: auto;min-height: 100%\">\r\n                <el-table-column label=\"参数名\" width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-input v-model=\"scope.row.key\"></el-input>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"参数值\" width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-input v-model=\"scope.row.value\"></el-input>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"参数描述\" width=\"180\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-input v-model=\"scope.row.des\"></el-input>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column>\r\n                  <template slot=\"header\">\r\n                    <el-button size=\"mini\" type=\"primary\" @click=\"add_headers\">新增</el-button>\r\n                  </template>\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button size=\"mini\" type=\"danger\" @click=\"del_headers(scope.$index)\">删除</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"Body\">\r\n              <el-tabs v-model=\"setting_api.payload_method\" @tab-click=\"handleClick\">\r\n                <el-tab-pane label=\"none\" name=\"none\"><h2 style=\"text-align: center;color: darkgrey\">不传任何参数</h2>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"form-data\" name=\"form-data\">\r\n                  <el-table\r\n                      :data=\"setting_api.payload_fd\"\r\n                      stripe\r\n                      size=\"mini\"\r\n                      style=\"width: 100%;overflow-y: auto;min-height: 100%\">\r\n                    <el-table-column label=\"参数名\" width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input v-model=\"scope.row.key\"></el-input>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"参数值\" width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input :id=\"'fd_value_input_'+scope.$index\" v-model=\"scope.row.value\"></el-input>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"文件(上传后参数值不可修改)\" width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-upload\r\n                            class=\"upload-demo\"\r\n                            :action=\"get_action_fd()\"\r\n                            :limit=\"1\"\r\n                            name=\"fd_file\"\r\n                            :on-success=\"upload_fd_file\">\r\n                          <el-button @click=\"set_fd_index(scope.$index)\" size=\"small\" type=\"primary\">FILE</el-button>\r\n                        </el-upload>\r\n\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"参数描述\" width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input v-model=\"scope.row.des\"></el-input>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column>\r\n                      <template slot=\"header\">\r\n                        <el-button size=\"mini\" type=\"primary\" @click=\"add_payload_fd\">新增</el-button>\r\n                      </template>\r\n                      <template slot-scope=\"scope\">\r\n                        <el-button size=\"mini\" type=\"danger\" @click=\"del_payload_fd(scope.$index)\">删除</el-button>\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"x-www-form-urlencode\" name=\"x-www-form-urlencode\">\r\n                  <el-table\r\n                      :data=\"setting_api.payload_xwfu\"\r\n                      stripe\r\n                      size=\"mini\"\r\n                      style=\"width: 100%;overflow-y: auto;min-height: 100%\">\r\n                    <el-table-column label=\"参数名\" width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input v-model=\"scope.row.key\"></el-input>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"参数值\" width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input v-model=\"scope.row.value\"></el-input>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"参数描述\" width=\"180\">\r\n                      <template slot-scope=\"scope\">\r\n                        <el-input v-model=\"scope.row.des\"></el-input>\r\n                      </template>\r\n                    </el-table-column>\r\n                    <el-table-column>\r\n                      <template slot=\"header\">\r\n                        <el-button size=\"mini\" type=\"primary\" @click=\"add_payload_xwfu\">新增</el-button>\r\n                      </template>\r\n                      <template slot-scope=\"scope\">\r\n                        <el-button size=\"mini\" type=\"danger\" @click=\"del_payload_xwfu(scope.$index)\">删除</el-button>\r\n                      </template>\r\n                    </el-table-column>\r\n                  </el-table>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"raw\" name=\"raw\">\r\n                  <el-select v-model=\"setting_api.payload_raw_method\"\r\n                             style=\"z-index:999;position:fixed;right:42px;width: 130px\"\r\n                             placeholder=\"Text\">\r\n                    <el-option label=\"Text\" value=\"Text\"></el-option>\r\n                    <el-option label=\"JavaScript\" value=\"JavaScript\"></el-option>\r\n                    <el-option label=\"JSON\" value=\"JSON\"></el-option>\r\n                    <el-option label=\"XML\" value=\"XML\"></el-option>\r\n                    <el-option label=\"HTML\" value=\"HTML\"></el-option>\r\n                  </el-select>\r\n                  <el-input v-model=\"setting_api.payload_raw\" type=\"textarea\" :rows=\"5\"></el-input>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"binary\" name=\"binary\">\r\n                  <el-upload\r\n                      class=\"upload-demo\"\r\n                      drag\r\n                      :action=\"get_action_binary()\"\r\n                      :limit=\"1\"\r\n                      name='binary_file'\r\n                      :on-success=\"upload_binary_file\">\r\n                    <i class=\"el-icon-upload\"></i>\r\n                    <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                    <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文</div>\r\n                  </el-upload>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"GraphQL\" name=\"GraphQL\">\r\n                  <el-input v-model=\"setting_api.payload_GQL_q\" type=\"textarea\" :rows=\"6\" style=\"width: 65%\"\r\n                            placeholder=\"QUERY\"></el-input>\r\n                  <el-input v-model=\"setting_api.payload_GQL_g\" type=\"textarea\" :rows=\"6\" style=\"width: 35%\"\r\n                            placeholder=\"GRAPHQL VARIABLES\"></el-input>\r\n                </el-tab-pane>\r\n              </el-tabs>\r\n            </el-tab-pane>\r\n            <el-tab-pane name=\"Response\" label=\"Response\">\r\n              <!--              <el-input v-model=\"response_data.R\" type=\"textarea\" style=\"height: 100%\" :rows=\"6\"></el-input>-->\r\n              <json-viewer :value=\"get_json()\"></json-viewer>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"ResponseData\">\r\n              <el-input v-model=\"response_data.RD\" type=\"textarea\" style=\"height: 100%\" :rows=\"6\"></el-input>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"ConfigureResult\">\r\n              <el-input v-model=\"response_data.CR\" type=\"textarea\" style=\"height: 100%\" :rows=\"6\"></el-input>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-form>\r\n      </div>\r\n      <div v-else-if=\"right_configure\">\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"save_configure\">Save</el-button>\r\n        <el-button size=\"mini\" type=\"text\" @click=\"up_configure\">up</el-button>\r\n        <el-button size=\"mini\" type=\"text\" @click=\"down_configure\">down</el-button>\r\n        &#12288 <span style=\"float:right;\">配置ID: {{ setting_configure.id }}</span>\r\n        <br>\r\n        &#12288 <span>执行时机：</span>\r\n        <el-select v-model=\"setting_configure.do_time\" placeholder=\"请选择\" style=\"width: 90px\">\r\n          <el-option label=\"before\" value=\"before\"></el-option>\r\n          <el-option label=\"after\" value=\"after\"></el-option>\r\n        </el-select>\r\n        &#12288 <span>配置名称：</span>\r\n        <el-input style=\"width:-webkit-calc(100% - 299px)\" v-model=\"setting_configure.label\"></el-input>\r\n        <br><br>\r\n        <el-tabs v-model=\"setting_configure.method\" @tab-click=\"choose_configure_method\" tab-position=\"left\"\r\n                 style=\"height: 100%\">\r\n          <!--          <el-tab-pane label=\"仅运行\">-->\r\n          <!--            <span class=\"smallfont\">帮助：选中此项后，其他配置不再运行！</span>-->\r\n          <!--          </el-tab-pane>-->\r\n          <el-tab-pane name=\"断言\" label=\"断言\">\r\n            <el-select v-model=\"setting_configure.select\" style=\"width: 120px\">\r\n              <el-option label=\"全值检索\" value=\"全值检索\"></el-option>\r\n              <el-option label=\"正则匹配\" value=\"正则匹配\"></el-option>\r\n              <el-option label=\"路径匹配\" value=\"路径匹配\"></el-option>\r\n              <el-option label=\"SQL断言\" value=\"SQL断言\"></el-option>\r\n            </el-select>\r\n            <el-input v-model=\"setting_configure.value\" placeholder=\"请输入表达式、sql语句\"\r\n                      style=\"width: -webkit-calc(100% - 175px )\"></el-input>\r\n            <br>\r\n            <p>帮助</p>\r\n            <p>1.全值检索：在整个返回值当中，是否存在目标字符串。（.find()） * </p>\r\n            <p>2.正则匹配：需要用户写左边界右边界和匹配正则表达式。也是只检索字符串。**</p>\r\n            <p>3.路径匹配：用户写路径和目标的类型和值。* ** （只能是json返回值才可用）</p>\r\n            <p>4.sql断言：用户写sql原生语句和目标值。* * *</p>\r\n            <p>例子：{\"errorCode\":200,\"data\":[{\"name\":\"lisi\"},{\"name\":\"zhangsan\"},{\"name\":\"wang\"}]}\r\n            <p>&#12288;全值检索：zhangsan</p>\r\n            <p>&#12288;正则匹配：name\":\"(.*?)\"}==zhangsan</p>\r\n            <p>&#12288;路径匹配：[\"data\"][1][\"name\"]==\"zhangsan\"</p>\r\n            <p>sql断言：用户必须在语句后写英文分号;</p>\r\n            <p>&#12288;sql断言：select name from 表 where id=5; == \"zhangsan(只取第一行第一个单元格数据做验证)\"</p>\r\n            <p>&#12288;sql断言：select name from 表 where name='zhangsan'; (结果是否为0)</p>\r\n\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"提取\" label=\"提取\">\r\n            <el-select v-model=\"setting_configure.select\" style=\"width: 120px\">\r\n              <el-option label=\"路径提取\" value=\"路径提取\"></el-option>\r\n              <el-option label=\"正则提取\" value=\"正则提取\"></el-option>\r\n              <el-option label=\"sql提取\" value=\"sql提取\"></el-option>\r\n            </el-select>\r\n            <el-input v-model=\"setting_configure.value\" placeholder=\"请输入表达式、sql查询语句\"\r\n                      style=\"width: -webkit-calc(100% - 175px )\"></el-input>\r\n            <br>\r\n            <p>帮助：</p>\r\n            <p>1.路径提取：用户写变量名=路径。仅限json</p>\r\n            <p>2.正则提取：用户写变量名=左边界(.*?)右边界</p>\r\n            <p>3.sql提取：用户写变量名=sql select 查询语句(只取第一行第一个单元格数据进行赋值)</p>\r\n\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"SQL增删改\" label=\"SQL增删改\">\r\n            <el-input type=\"textarea\" :rows=\"5\" v-model=\"setting_configure.value\"\r\n                      placeholder=\"请输入需要执行的sql语句\"></el-input>\r\n            <br>\r\n            <p>帮助：</p>\r\n            <p>一般用来执行某个特殊的需求，如修改、增加、删除等。用户手写sql语句即可，没有返回结果</p>\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"随机变量\" label=\"随机变量\">\r\n            <el-input v-model=\"setting_configure.value\" placeholder=\"请按照下面要求，输入表达式\"></el-input>\r\n            <br>\r\n            <p>帮助：</p>\r\n            <p>1.常数：a=5, a=8.55, a=\"呵呵\", a=[1,2,3] </p>\r\n            <p>2.随机整数：a=randint(1,10)+2-3-12 #随机生成1-10之内的某个数.</p>\r\n            <p>3.时间戳：a=time.time()</p>\r\n            <p>4.身份证：a=IDcard()</p>\r\n            <p> 5.地址：a=random_adress()</p>\r\n            <p></p>\r\n            <p></p>\r\n\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"mock\" label=\"mock\">\r\n            <el-select v-model=\"setting_configure.select\" style=\"width: 120px\">\r\n              <el-option label=\"写死返回值\" value=\"写死返回值\"></el-option>\r\n              <el-option label=\"第三方接口\" value=\"第三方接口\"></el-option>\r\n            </el-select>\r\n            <el-input type=\"textarea\" :rows=\"8\" v-model=\"setting_configure.value\" placeholder=\"请输入返回值、接口请求等\"></el-input>\r\n            <br>\r\n            <p>帮助：</p>\r\n            <p>1.选择写死返回值，可直接粘贴返回值到上面的多行文本框，点击保存即可</p>\r\n            <p>2.第三方接口，请依次每行输入：url、请求方式、header字典、请求体类型、请求体</p>\r\n            <p>\r\n              如：<br>\r\n              &nbsp; http://www.xxx.com/aaa/bbb?a=1<br>\r\n              &nbsp; post <br>\r\n              &nbsp; {\"a\":1,\"b\"：1} <br>\r\n              &nbsp; form-data / x-www-form-urlencode / raw-json / raw-text / raw-html / ram-xml / raw-javascript <br>\r\n              &nbsp; {\"username\":\"zhangsan\",\"userid\":45} <br>\r\n\r\n            </p>\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"插入参数\" label=\"插入参数\">\r\n            <el-select v-model=\"setting_configure.select\" style=\"width: 150px\">\r\n              <el-option label=\"request_header\" value=\"request_header\"></el-option>\r\n              <el-option label=\"params\" value=\"params\"></el-option>\r\n              <el-option label=\"request_body\" value=\"request_body\"></el-option>\r\n            </el-select>\r\n            <el-input v-model=\"setting_configure.value\" placeholder=\"请输入表达式\"\r\n                      style=\"width: -webkit-calc(100% - 205px )\"></el-input>\r\n            <br>\r\n            <p>帮助：</p>\r\n            <p>比如：a=55</p>\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"加密参数\" label=\"加密参数\">\r\n            <el-select v-model=\"setting_configure.select\" style=\"width: 150px\" placeholder=\"插入位置\">\r\n              <el-option label=\"request_header\" value=\"request_header\"></el-option>\r\n              <el-option label=\"params\" value=\"params\"></el-option>\r\n            </el-select>\r\n            <el-input v-model=\"setting_configure.value\" placeholder=\"请输入表达式\"\r\n                      style=\"width: -webkit-calc(100% - 205px )\"></el-input>\r\n            <br>\r\n            <p>帮助：</p>\r\n            <p>例如：sign = python能执行的加密算法， 其中可以使用接口的全部位置的参数,函数(hashlib.md5(),hashlib.shar1())</p>\r\n            <p>定制算法：sign = make_sign()</p>\r\n          </el-tab-pane>\r\n          <el-tab-pane name=\"草稿\" label=\"草稿\">\r\n            <el-input type=\"textarea\" :rows=\"10\" placeholder=\"请随意使用该文本框\"></el-input>\r\n            <p>帮助：临时存放粘贴数据</p>\r\n          </el-tab-pane>\r\n\r\n\r\n        </el-tabs>\r\n      </div>\r\n      <div v-else-if=\"right_report\">\r\n        <Report :project_id=\"project_id\"></Report>\r\n\r\n      </div>\r\n      <div v-else=\"\">请点击左侧设置节点...</div>\r\n    </el-card>\r\n    <h1>接口用例页 &#12288\r\n      <el-button size=\"mini\" type=\"primary\" @click=\"add_apis\">新增接口</el-button>\r\n    </h1>\r\n    <el-tree\r\n        id=\"left_div\"\r\n        style=\"width:300px;overflow-y: auto\"\r\n        :data=\"apis\"\r\n        show-checkbox\r\n        node-key=\"id\"\r\n        :default-checked-keys=\"dck\"\r\n        :default-expanded-keys=\"dek\"\r\n        @check-change=\"handleCheckChange\"\r\n        ref=\"tree\"\r\n        :check-strictly=\"true\">\r\n      <span slot-scope=\"{data}\">\r\n<!--        <span size=\"mini\">{{ data.label }} &#12288</span>-->\r\n        <span size=\"mini\" v-text=\"get_label(data.label)\"></span>&nbsp;\r\n        <el-button\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"() => set(data)\"\r\n            style=\"color: darkturquoise\">\r\n              设置\r\n        </el-button>\r\n        <el-button\r\n            v-if=\"v_if(data)\"\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"() => add_configure(data)\"\r\n            style=\"color: darkgreen\">\r\n              增加\r\n        </el-button>\r\n        <el-button\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"() => remove(data)\">\r\n            删除\r\n        </el-button>\r\n\r\n      </span>\r\n    </el-tree>\r\n\r\n\r\n    <el-card style=\"position: fixed;bottom: 15px;width:-webkit-calc(100% - 240px);min-height:100px;\">\r\n      <el-input v-model=\"userable_par\" type=\"textarea\" :row=\"5\" style=\"float:right;width: -webkit-calc(100% - 300px)\"\r\n                placeholder=\"当前可用变量\"></el-input>\r\n      <el-button size=\"mini\" type=\"success\" @click=\"run\">执行</el-button> &nbsp;<span>正在执行：</span>\r\n      <span id='doing_api' style=\"color: #42b983\"></span>\r\n      <br>\r\n      <el-button @click=\"look_report\" style=\"margin-top: 10px\" size=\"mini\" type=\"primary\">报告</el-button> &nbsp;<span>执行结果：</span>\r\n      <strong><span id=\"end_result\" style=\"color: darkgreen\"></span><br></strong>\r\n\r\n\r\n    </el-card>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Report from \"@/components/Report\";\r\n\r\nexport default {\r\n  name: \"Project_case\",\r\n  data() {\r\n    return {\r\n\r\n      right_report: false,\r\n      env_list: [],\r\n      fd_index: '',  //fd参数对应行的下标\r\n      choose_tab_pane: '',\r\n      right_api: false,\r\n      right_configure: false,\r\n      userable_par: '',\r\n      setting_api: {},\r\n      setting_configure: {},\r\n      dck: [], // 默认选中的节点\r\n      dek: [], //默认展开的节点\r\n      ref: \"tree\",\r\n      tableData: [{name: \"name\", des: 'des'}],\r\n      activeName: \"\", //body中默认显示哪个tab页\r\n      apis: [\r\n        // {id:1,type:'api',label:'接口1号',children:[{id:'1_1',type:'configure',label:'设置1'},{id:'1_2',type:'configure',label:'设置2'},{id:'1_3',type:'configure',label:'设置3'}]},\r\n      ],\r\n      response_data: {\r\n        R: '',  // Response\r\n        RD: '', // ResponseData\r\n        CR: '', // ConfigureResult\r\n      },\r\n    }\r\n  },\r\n  props: [\"project_id\",],\r\n  components:{\r\n    Report,\r\n  },\r\n  mounted() {\r\n    document.getElementById('right_id').style.minHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\r\n    document.getElementById('right_id').style.maxHeight = (document.documentElement.clientHeight - 240).toString() + 'px';\r\n    document.getElementById('left_div').style.height = (document.documentElement.clientHeight - 286).toString() + 'px'\r\n    axios.get('http://localhost:8000/get_apis/', {\r\n      params: {\r\n        project_id: this.project_id,\r\n      }\r\n    }).then(res => {\r\n      this.apis = res.data\r\n    });\r\n    // 获取选中的接口\r\n    axios.get('http://localhost:8000/get_dck/', {\r\n      params: {\r\n        project_id: this.project_id,\r\n      }\r\n    }).then(res => {\r\n      this.dck = res.data\r\n    });\r\n    axios.get('http://localhost:8000/get_env_list/').then(res => {\r\n      this.env_list = res.data;\r\n      this.env_info = this.loadAll();\r\n    })\r\n\r\n  },\r\n  methods: {\r\n    look_report() {\r\n      this.right_configure = false;\r\n      this.right_api = false;\r\n      this.right_report = true;\r\n    },\r\n    querySearch(queryString, cb) {\r\n      var env = this.env_info;\r\n      var results = queryString ? env.filter(this.createFilter(queryString)) : env;\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results);\r\n    },\r\n    createFilter(queryString) {\r\n      return (env) => {\r\n        return (env.host.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n      };\r\n    },\r\n    loadAll() {\r\n      return this.env_list\r\n    },\r\n    handleSelect(item) {\r\n      this.setting_api.host = item.host;\r\n    },\r\n\r\n    get_action_binary() {\r\n      return process.env.VUE_APP_BASE_URL + '/upload_binary_file/?ApiID=' + this.setting_api.id\r\n    },\r\n    get_action_fd() {\r\n      return process.env.VUE_APP_BASE_URL + '/upload_fd_file/?ApiID=' + this.setting_api.id\r\n    },\r\n    get_json() {\r\n      try {\r\n        return JSON.parse(this.response_data.R)\r\n      } catch (e) {\r\n        return this.response_data.R\r\n      }\r\n    },\r\n    // 获取index\r\n    set_fd_index(index) {\r\n      this.fd_index = index;\r\n    },\r\n    upload_fd_file(res, file) {\r\n      var file_name = '*FILE*' + this.setting_api.id + '_' + file.raw.name;\r\n      this.setting_api.payload_fd[this.fd_index].value = file_name;\r\n      document.getElementById('fd_value_input_' + this.fd_index).value = file_name;\r\n      document.getElementById('fd_value_input_' + this.fd_index).disabled = true;\r\n\r\n    },\r\n    upload_binary_file(res, file) {\r\n      this.setting_api.payload_binary = this.setting_api.id + '_' + file.raw.name;\r\n    },\r\n    up_api() {\r\n      axios.get('http://localhost:8000/up_api/', {\r\n        params: {\r\n          api_id: this.setting_api.id,\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.right_api = false;\r\n        this.dek = [this.setting_api.id]\r\n      })\r\n    },\r\n    down_api() {\r\n      axios.get('http://localhost:8000/down_api/', {\r\n        params: {\r\n          api_id: this.setting_api.id,\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.right_api = false;\r\n      })\r\n    },\r\n    up_configure() {\r\n      axios.get('http://localhost:8000/up_configure/', {\r\n        params: {\r\n          configure_id: this.setting_configure.id,\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.right_configure = false;\r\n        this.dek = [parseInt(this.setting_configure.id.split('_')[0])] // 将字符串转换成整形\r\n      })\r\n    },\r\n    down_configure() {\r\n      axios.get('http://localhost:8000/down_configure/', {\r\n        params: {\r\n          configure_id: this.setting_configure.id,\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.right_configure = false;\r\n        this.dek = [parseInt(this.setting_configure.id.split('_')[0])] // 将字符串转换成整形\r\n      })\r\n    },\r\n    // get_label(label){\r\n    //   if (label.length>12){\r\n    //     var new_label = label.substring(0,12) + '...'\r\n    //   }\r\n    //   else{\r\n    //     var new_label = label\r\n    //   }\r\n    //   return new_label\r\n    //\r\n    // },\r\n    get_label(label) {\r\n      return label.substring(0, 12) + ((label.length > 12) ? '...' : '')\r\n    },\r\n    handleCheckChange(data, checked) {\r\n      console.log(data, checked);\r\n      axios.get('http://localhost:8000/set_dck/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          dck: this.$refs.tree.getCheckedKeys().toString(),\r\n        }\r\n      }).then(res => {\r\n        this.dck = res.data\r\n      })\r\n    },\r\n    // 如果是接口，则展示接口详情页；否则展示配置详情\r\n    set(data) {\r\n      console.log(data)\r\n      if (data.type == 'api') {\r\n        this.right_api = true;\r\n        this.right_configure = false;\r\n        this.right_report = false;\r\n        this.setting_api = data;\r\n        this.response_data = {\r\n          R: '',  // Response\r\n          RD: '', // ResponseData\r\n          CR: '', // ConfigureResult\r\n        };\r\n        // 获取可用变量\r\n        axios.get('/get_userable_par/', {\r\n          params: {\r\n            api_id: data.id,\r\n            project_id: this.project_id,\r\n          }\r\n        }).then(res => {\r\n          this.userable_par = res.data\r\n        })\r\n      } else {\r\n        this.right_api = false;\r\n        this.right_report = false;\r\n        this.right_configure = true;\r\n        this.setting_configure = data;\r\n\r\n      }\r\n\r\n    },\r\n    // 删除，增加二次确认\r\n    remove(data) {\r\n      if (confirm(\"确定删除吗？\") == false) {\r\n        return\r\n      }\r\n\r\n      axios.get('http://localhost:8000/remove_ac', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          id: data.id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.right_api = false;  // 删除后设置右侧不显示\r\n        this.right_configure = false;\r\n        this.dck.remove(data.id);\r\n      })\r\n    },\r\n\r\n    v_if(data) {\r\n      if (data.type == 'api') {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    handleClick(tab, event) {\r\n      console.log(tab, event)\r\n    },\r\n    // 新增配置后，让该接口展开\r\n    add_configure(data) {\r\n      axios.get('http://localhost:8000/add_configure/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          id: data.id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.dek = [data.id];\r\n      })\r\n\r\n    },\r\n    add_apis() {\r\n      axios.get('http://localhost:8000/add_apis/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data\r\n        this.dek = []\r\n      })\r\n\r\n    },\r\n    save_configure() {\r\n      axios.post('http://localhost:8000/save_configure/', this.setting_configure).then(res => {\r\n        this.$message({\r\n          message: '保存成功！',\r\n          type: 'success'\r\n        })\r\n\r\n      })\r\n\r\n    },\r\n    save_api() {\r\n      axios.post('http://localhost:8000/save_api/', this.setting_api, {\r\n        params: {\r\n          project_id: this.project_id\r\n        }\r\n      }).then(res => {\r\n        this.apis = res.data;\r\n        this.$message({\r\n          message: '保存成功',\r\n          type: 'success'\r\n        })\r\n      })\r\n    },\r\n    send_api() {\r\n      axios.post('http://localhost:8000/send_api/', this.setting_api, {\r\n        params: {\r\n          project_id: this.project_id,\r\n        }\r\n      }).then(res => {\r\n        this.response_data = res.data;\r\n        this.choose_tab_pane = 'Response';\r\n      })\r\n\r\n    },\r\n    run() {\r\n      this.right_configure = false;\r\n      this.right_api = false;\r\n      this.right_report = false;\r\n      if (confirm('执行大用例之前请确保当前接口或配置的设置已经保存') == false) {\r\n        return\r\n      }\r\n      var end_result = document.getElementById('end_result');\r\n      var doing_api = document.getElementById('doing_api');\r\n      var project_id = this.project_id;\r\n      var t = setInterval(function () {\r\n        axios.get('http://localhost:8000/doing_api/', {\r\n          params: {\r\n            project_id: project_id, // 由于作用域的问题，定时器无法获取this.project_id,所以在外面定义变量var\r\n          }\r\n        }).then(res => {\r\n          doing_api.innerText = res.data\r\n        })\r\n      }, 500)\r\n      axios.get('/run/', {\r\n        params: {\r\n          project_id: this.project_id,\r\n          // dck: this.dck.toString(),  不通过前端传值，通过后端去取，提高run方法的复用性\r\n        }\r\n      }).then(res => {\r\n        clearInterval(t);\r\n        end_result.innerText = res.data;\r\n        if (res.data == 'True') {\r\n          end_result.style.color = 'green'\r\n        } else {\r\n          end_result.style.color = 'red'\r\n        }\r\n        doing_api.innerText = '全部执行完毕'\r\n      })\r\n    },\r\n\r\n    // 选择配置的方法，切换配置tab页时清空之前选择的方式、值\r\n    choose_configure_method(tab, event) {\r\n      console.log(tab, event)\r\n      this.setting_configure.select = ''\r\n      this.setting_configure.value = ''\r\n      this.setting_configure.method = tab.label;\r\n    },\r\n    // 新增参数\r\n    add_params() {\r\n      this.setting_api.params.push({\"key\": \"\", \"value\": \"\"})\r\n    },\r\n    // 删除参数\r\n    del_params(index) {\r\n      this.setting_api.params.splice(index, 1)\r\n    },\r\n    // 新增参数\r\n    add_headers() {\r\n      this.setting_api.headers.push({})\r\n    },\r\n    // 删除参数\r\n    del_headers(index) {\r\n      this.setting_api.headers.splice(index, 1)\r\n    },\r\n    // 新增参数\r\n    add_payload_fd() {\r\n      this.setting_api.payload_fd.push({})\r\n    },\r\n    // 删除参数\r\n    del_payload_fd(index) {\r\n      this.setting_api.payload_fd.splice(index, 1)\r\n    },\r\n    // 新增参数\r\n    add_payload_xwfu() {\r\n      this.setting_api.payload_xwfu.push({})\r\n    },\r\n    // 删除参数\r\n    del_payload_xwfu(index) {\r\n      this.setting_api.payload_xwfu.splice(index, 1)\r\n    },\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.smallfont {\r\n  font-size: xx-small;\r\n  color: gray;\r\n}\r\n\r\n.el-table {\r\n  max-height: 400px;\r\n  overflow-y: scroll;\r\n}\r\n\r\nP {\r\n  font-size: xx-small;\r\n  color: gray;\r\n}\r\n</style>"]}]}